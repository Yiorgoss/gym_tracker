// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_DIRECT")
}

model Example {
  id         String    @id @default(cuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  text       String
}
model User {
  id           String    @id @unique

  auth_session Session[]
  key          Key[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

enum Force {
  static
  push
  pull
}

enum Equipment {
  body_only
  other
  dumbbell 
  barbell 
  cable
  kettlebells 
  bands
  medicine_ball
  exercise_ball
  machine
  ez_curl_bar
  foam_roll
}
enum Category {
  strength
  stretching
  plyometrics
  strongman
  powerlifting
  cardio
  olympic_weightlifting
}
enum Mechanic {
  compound
  isolation
}
enum Level {
  beginner
  intermediate
  expert
}

model Exercise {
  id                Int @id @default(autoincrement())
  name              String

  level             Level
  mechanic          Mechanic?
  equipment         Equipment?
  
  force             Force?
  category          Category

  primaryMuscles    ExercisePrimaryMuscle[] 
  secondaryMuscles  ExerciseSecondaryMuscle[]

  instructions      Instruction[]
  images            Image[]

   
}
model Image {
  id Int @id @default(autoincrement())
  url String

  exercise Exercise @relation(fields:[exerciseId], references:[id])
  exerciseId Int
}

model Instruction {
  id Int @id @default(autoincrement())
  text String

  exercise Exercise @relation(fields:[exerciseId], references:[id])
  exerciseId Int
}

model PrimaryMuscle {
  id    Int @id @default(autoincrement())
  name  String @unique

  exercise ExercisePrimaryMuscle[] 

}

model ExercisePrimaryMuscle {
  exercise      Exercise @relation(fields:[exerciseId], references: [id])
  exerciseId    Int @unique

  primaryMuscle PrimaryMuscle @relation(fields: [primaryMuscleId], references: [id])
  primaryMuscleId Int

  @@id([exerciseId,primaryMuscleId])
}

model SecondaryMuscle {
  id    Int @id @default(autoincrement())
  name  String @unique

  exercise ExerciseSecondaryMuscle[] 
}

model ExerciseSecondaryMuscle {
  exercise      Exercise @relation(fields:[exerciseId], references: [id])
  exerciseId    Int

  secondaryMuscle SecondaryMuscle @relation(fields: [secondaryMuscleId], references: [id])
  secondaryMuscleId Int

  @@id([exerciseId,secondaryMuscleId])
}
